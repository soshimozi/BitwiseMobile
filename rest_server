#!/bin/bash
#
# There is some perhaps unnecessary complexity going on in the relationship between
# Forever and the server process. See: https://github.com/indexzero/forever
#
# 1) Forever starts its own watchdog process, and keeps its own configuration data 
# in /var/run/forever.
#
# 2) If the process dies, Forever will restart it: if it fails but continues to run, 
# it won't be restarted.
#
# 3) If the process is stopped via this script, the pidfile is left in place; this 
# helps when issues happen with failed stop attempts.
#
# 4) Which means the check for running/not running is complex, and involves parsing 
# of the Forever list output.
#
# chkconfig: 345 80 20
# description: A node.js based rest server
# processname: rest_server
# pidfile: /var/run/rest_server.pid
# logfile: /var/log/rest_server.log
#
 
# Source function library.
#. /lib/lsb/init-functions
 
NAME=rest_server
SOURCE_DIR=/usr/local/node/bitwise/rest
SOURCE_FILE=index.js
 
user=root
pidfile=/var/run/$NAME.pid
logfile=$NAME.log
forever_dir=/var/run/forever
 
node=node
forever=forever
sed=sed
 
export PATH=$PATH:/home/node/local/node/bin
 
start() {
  echo "Starting $NAME node instance: "
 
  if [ "$foreverid" == "" ]; then
    # Create the log and pid files, making sure that 
    # the target use has access to them
    touch $logfile
    chown $user $logfile
 
    touch $pidfile
    chown $user $pidfile
 
    # Launch the application
    daemon --user=root -- \
      $forever start --pidFile $pidfile -l $logfile \
      -a --sourceDir $SOURCE_DIR $SOURCE_FILE
    RETVAL=$?
  else
    echo "Instance already running"
    RETVAL=0
  fi
}
 
stop() {
  echo -n "Shutting down $NAME node instance : "
  if [ "$foreverid" != "" ]; then
    #$node $SOURCE_DIR/prepareForStop.js
    $forever stop --pidFile $pidfile --sourceDir $SOURCE_DIR $SOURCE_FILE
    rm $pidfile 
  else
    echo "Instance is not running";
  fi
  RETVAL=$?
}

echo checking pid file: $pidfile! 
if [ -f $pidfile ]; then
  echo pid file was there!
  read pid < $pidfile
else
  pid=
fi
 
if [ "$pid" != "" ]; then

  # Gnarly sed usage to obtain the foreverid.
  sed1="/$pid\]/p"
  sed2="s/.*\[\([0-9]\+\)\].*\s$pid\].*/\1/g"
  foreverid=`$forever list | $sed $sed1 | $sed $sed2`
else
  foreverid=""
fi
 
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status -p ${pidfile}
    ;;
  *)
    echo "Usage:  {start|stop|status}"
    exit 1
    ;;
esac
exit $RETVAL
